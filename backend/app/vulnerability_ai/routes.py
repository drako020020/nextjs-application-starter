from flask import Blueprint, request, jsonify
import requests

vulnerability_bp = Blueprint('vulnerability_ai', __name__)

CVE_API_URL = 'https://cve.circl.lu/api/search/'

@vulnerability_bp.route('/analyze', methods=['POST'])
def analyze_vulnerabilities():
    data = request.get_json()
    services = data.get('services', [])  # List of dicts with 'name' and 'version'

    vulnerabilities = []

    for service in services:
        name = service.get('name')
        version = service.get('version', '')
        if not name:
            continue

        query = f"{name} {version}".strip()
        try:
            response = requests.get(CVE_API_URL + query)
            if response.status_code == 200:
                cves = response.json()
                for cve in cves:
                    vulnerabilities.append({
                        'id': cve.get('id'),
                        'summary': cve.get('summary'),
                        'cvss': cve.get('cvss'),
                        'published': cve.get('Published'),
                        'modified': cve.get('Modified')
                    })
        except Exception as e:
            return jsonify({'error': str(e)}), 500

    return jsonify({'vulnerabilities': vulnerabilities})
